<%- include('include/header') %>

<div class="row justify-content-center min-vh-100 align-items-center">
  <div class="col-lg-5 col-md-7">
    <div class="card shadow-custom rounded-custom border-0">
      <!-- Header -->
      <div class="card-header bg-gradient-primary text-white text-center border-0 rounded-top-custom">
        <div class="py-3">
          <i class="fas fa-sign-in-alt fa-3x mb-3"></i>
          <h2 class="mb-1"><%- __('welcome_back') %></h2>
          <p class="mb-0 opacity-75"><%- __('sign_in_to_account') %></p>
        </div>
      </div>
      
      <!-- Body -->
      <div class="card-body p-5">
        <form action="/login" method="POST" class="needs-validation" novalidate>
          <div class="mb-4">
            <label for="username" class="form-label">
              <i class="fas fa-user me-2 text-primary"></i><%- __('username') %>
            </label>
            <input type="text" 
                   class="form-control form-control-lg" 
                   id="username" 
                   name="username" 
                   placeholder="<%- __('enter_username') %>"
                   required>
            <div class="invalid-feedback">
              <%- __('please_provide_valid_username') %>
            </div>
          </div>
          
          <div class="mb-4">
            <label for="password" class="form-label">
              <i class="fas fa-lock me-2 text-primary"></i><%- __('password') %>
            </label>
            <div class="position-relative">
              <input type="password" 
                     class="form-control form-control-lg" 
                     id="password" 
                     name="password" 
                     placeholder="<%- __('enter_password') %>"
                     required>
              <button type="button" 
                      class="btn btn-link position-absolute end-0 top-50 translate-middle-y"
                      onclick="togglePassword()">
                <i class="fas fa-eye" id="toggleIcon"></i>
              </button>
            </div>
            <div class="invalid-feedback">
              <%- __('please_provide_valid_password') %>
            </div>
          </div>
          
          <div class="d-grid mb-4">
            <button type="submit" class="btn btn-primary btn-lg">
              <i class="fas fa-sign-in-alt me-2"></i><%- __('sign_in') %>
            </button>
          </div>
        </form>
        
        <!-- Divider -->
        <div class="text-center mb-4">
          <span class="text-muted"><%- __('dont_have_account') %></span>
        </div>
        
        <!-- Sign Up Link -->
        <div class="d-grid">
          <a href="/signup" class="btn btn-outline-primary btn-lg">
            <i class="fas fa-user-plus me-2"></i><%- __('create_account') %>
          </a>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  body {
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    min-height: 100vh;
  }
  
  .rounded-top-custom {
    border-top-left-radius: var(--radius-xl) !important;
    border-top-right-radius: var(--radius-xl) !important;
  }
  
  .form-control:focus {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 0.2rem rgba(37, 99, 235, 0.25);
  }
</style>

<script>
  function togglePassword() {
    const passwordInput = document.getElementById('password');
    const toggleIcon = document.getElementById('toggleIcon');
    
    if (passwordInput.type === 'password') {
      passwordInput.type = 'text';
      toggleIcon.classList.remove('fa-eye');
      toggleIcon.classList.add('fa-eye-slash');
    } else {
      passwordInput.type = 'password';
      toggleIcon.classList.remove('fa-eye-slash');
      toggleIcon.classList.add('fa-eye');
    }
  }
  
  // Enhanced form styling and interaction
  document.addEventListener('DOMContentLoaded', function() {
    // Focus effects for form controls
    const formControls = document.querySelectorAll('.form-control');
    formControls.forEach(control => {
      control.addEventListener('focus', function() {
        this.parentElement.classList.add('focused');
      });
      
      control.addEventListener('blur', function() {
        this.parentElement.classList.remove('focused');
      });
    });
  });
  
  // Bootstrap validation
  (function() {
    'use strict';
    window.addEventListener('load', function() {
      var forms = document.getElementsByClassName('needs-validation');
      var validation = Array.prototype.filter.call(forms, function(form) {
        form.addEventListener('submit', function(event) {
          if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      });
    }, false);
  })();
</script>

<%- include('include/footer') %>