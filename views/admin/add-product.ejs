<%- include('../include/admin-header') %>

<style>

        .form-section {
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 30px;
            margin-bottom: 20px;
        }
        .dropzone {
            border: 2px dashed #ddd;
            border-radius: 10px;
            padding: 30px;
            text-align: center;
            transition: all 0.3s ease;
            cursor: pointer;
        }
        .dropzone:hover {
            border-color: #3498db;
            background: #f8f9fa;
        }
        .dropzone.dragover {
            border-color: #e74c3c;
            background: #fff5f5;
        }
        .preview-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 15px;
        }
        .preview-item {
            position: relative;
            width: 100px;
            height: 100px;
        }
        .preview-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 5px;
            border: 2px solid #ddd;
        }
        .preview-item .remove-btn {
            position: absolute;
            top: -5px;
            right: -5px;
            background: #e74c3c;
            color: white;
            border: none;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            font-size: 12px;
            cursor: pointer;
        }
        .size-item,
        .color-item {
            background: #f8f9fa !important;
            border: 1px solid #dee2e6 !important;
            transition: all 0.2s ease;
        }
        .size-item:hover,
        .color-item:hover {
            background: #e9ecef !important;
            border-color: #adb5bd !important;
        }
        .form-control-color {
            height: 38px;
            border-radius: 0.375rem;
        }
        .btn-remove {
            background: #e74c3c;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 3px;
            font-size: 12px;
        }
    </style>

            <!-- Page Header -->
            <div class="page-header">
                <h2><i class="fas fa-plus"></i> <%= title %></h2>
                <p>Create a new product for your shop with images, pricing, and detailed information.</p>
            </div>

            <!-- Flash Messages -->
            <% if (typeof messages !== 'undefined') { %>
                <% if (messages.success) { %>
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <%= messages.success %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <% } %>
                <% if (messages.error) { %>
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <%= messages.error %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <% } %>
            <% } %>

            <!-- Add Product Form -->
            <form action="/admin/products" method="POST" enctype="multipart/form-data">
                <!-- Basic Information -->
                <div class="content-card">
                        <h4 class="mb-3">
                            <i class="fas fa-info-circle"></i> Basic Information
                        </h4>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="name" class="form-label">Product Name *</label>
                                    <input type="text" class="form-control" id="name" name="name" required>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label for="basePrice" class="form-label">Base Price *</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input type="number" step="0.01" class="form-control" id="basePrice" name="basePrice" required>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label for="stockQuantity" class="form-label">Stock Quantity</label>
                                    <input type="number" class="form-control" id="stockQuantity" name="stockQuantity" value="0">
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label for="deliveryTime" class="form-label">Delivery Time (days)</label>
                                    <input type="number" class="form-control" id="deliveryTime" name="deliveryTime" value="14" min="1" max="365">
                                    <small class="form-text text-muted">Number of days for delivery</small>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="category" class="form-label">Category *</label>
                                    <select class="form-control" id="category" name="category" required>
                                        <option value="">Select Category</option>
                                        <option value="Clothing">Clothing</option>
                                        <option value="Shoes">Shoes</option>
                                        <option value="Accessories">Accessories</option>
                                        <option value="Home & Living">Home & Living</option>
                                        <option value="Electronics">Electronics</option>
                                        <option value="Sports">Sports</option>
                                        <option value="Other">Other</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="description" class="form-label">Description *</label>
                                    <textarea class="form-control" id="description" name="description" rows="3" required></textarea>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Images -->
                    <div class="form-section">
                        <h4 class="mb-3">
                            <i class="fas fa-images"></i> Product Images
                        </h4>
                        <div class="dropzone" id="imageDropzone">
                            <i class="fas fa-cloud-upload-alt fa-3x text-muted mb-3"></i>
                            <h5>Drop images here or click to browse</h5>
                            <p class="text-muted">Supports: JPG, PNG, GIF (Max: 5MB each)</p>
                            <input type="file" id="imageInput" name="images" multiple accept="image/*" style="display: none;">
                        </div>
                        <div id="previewContainer" class="preview-container"></div>
                    </div>

                    <!-- Sizes -->
                    <div class="form-section">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h4><i class="fas fa-ruler"></i> Size Options</h4>
                            <button type="button" class="btn btn-outline-primary" id="addSizeBtn">
                                <i class="fas fa-plus"></i> Add Size
                            </button>
                        </div>
                        <div id="sizesContainer">
                            <!-- Dynamic size inputs will be added here -->
                        </div>
                        <input type="hidden" id="sizesData" name="sizes" value="[]">
                    </div>

                    <!-- Colors -->
                    <div class="form-section">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h4><i class="fas fa-palette"></i> Color Options</h4>
                            <button type="button" class="btn btn-outline-primary" id="addColorBtn">
                                <i class="fas fa-plus"></i> Add Color
                            </button>
                        </div>
                        <div id="colorsContainer">
                            <!-- Dynamic color inputs will be added here -->
                        </div>
                        <input type="hidden" id="colorsData" name="colors" value="[]">
                    </div>

                    <!-- Features -->
                    <div class="form-section">
                        <h4 class="mb-3">
                            <i class="fas fa-list"></i> Product Features
                        </h4>
                        <textarea class="form-control" name="features" rows="4" 
                                  placeholder="Enter each feature on a new line&#10;Example:&#10;High-quality fabric&#10;Machine washable&#10;Fade-resistant colors"></textarea>
                    </div>

                    <!-- Submit Buttons -->
                    <div class="form-section text-center">
                        <button type="submit" class="btn btn-success btn-lg me-3">
                            <i class="fas fa-plus"></i> Create Product
                        </button>
                        <a href="/admin/products" class="btn btn-secondary btn-lg">
                            <i class="fas fa-times"></i> Cancel
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        console.log('Add Product page loaded successfully');
        
        // File upload handling
        const imageInput = document.getElementById('imageInput');
        const dropzone = document.getElementById('imageDropzone');
        const previewContainer = document.getElementById('previewContainer');
        let selectedFiles = [];

        dropzone.addEventListener('click', () => imageInput.click());
        dropzone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropzone.classList.add('dragover');
        });
        dropzone.addEventListener('dragleave', () => {
            dropzone.classList.remove('dragover');
        });
        dropzone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropzone.classList.remove('dragover');
            handleFiles(e.dataTransfer.files);
        });
        imageInput.addEventListener('change', (e) => {
            handleFiles(e.target.files);
        });

        function handleFiles(files) {
            Array.from(files).forEach(file => {
                if (file.type.startsWith('image/') && file.size <= 5 * 1024 * 1024) {
                    selectedFiles.push(file);
                    addPreview(file);
                }
            });
            updateFileInput();
        }

        function addPreview(file) {
            const reader = new FileReader();
            reader.onload = (e) => {
                const div = document.createElement('div');
                div.className = 'preview-item';
                div.innerHTML = `
                    <img src="${e.target.result}" alt="Preview">
                    <button type="button" class="remove-btn" onclick="removePreview(this, '${file.name}')">×</button>
                `;
                previewContainer.appendChild(div);
            };
            reader.readAsDataURL(file);
        }

        function removePreview(button, fileName) {
            selectedFiles = selectedFiles.filter(file => file.name !== fileName);
            button.parentElement.remove();
            updateFileInput();
        }

        function updateFileInput() {
            const dt = new DataTransfer();
            selectedFiles.forEach(file => dt.items.add(file));
            imageInput.files = dt.files;
        }

                // Sizes and Colors Management - Completely Rewritten
        let sizeIndex = 0;
        let colorIndex = 0;

        // Wait for DOM to be ready
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded, initializing size/color functionality');
            
            // Add Size Button Event Listener
            const addSizeBtn = document.getElementById('addSizeBtn');
            if (addSizeBtn) {
                addSizeBtn.addEventListener('click', function() {
                    console.log('Add Size button clicked');
                    addNewSize();
                });
            } else {
                console.error('addSizeBtn not found');
            }

            // Add Color Button Event Listener
            const addColorBtn = document.getElementById('addColorBtn');
            if (addColorBtn) {
                addColorBtn.addEventListener('click', function() {
                    console.log('Add Color button clicked');
                    addNewColor();
                });
            } else {
                console.error('addColorBtn not found');
            }
        });

        function addNewSize() {
            const container = document.getElementById('sizesContainer');
            if (!container) {
                console.error('sizesContainer not found');
                return;
            }

            const sizeDiv = document.createElement('div');
            sizeDiv.className = 'size-item border rounded p-3 mb-3 bg-light';
            sizeDiv.setAttribute('data-size-index', sizeIndex);
            
            sizeDiv.innerHTML = `
                <div class="row g-2">
                    <div class="col-md-5">
                        <label class="form-label">Size Name</label>
                        <input type="text" class="form-control size-name-input" 
                               placeholder="e.g., Small, Medium, Large, XL" 
                               onkeyup="updateSizesData()">
                    </div>
                    <div class="col-md-5">
                        <label class="form-label">Price ($)</label>
                        <input type="number" step="0.01" min="0" class="form-control size-price-input" 
                               placeholder="0.00" onkeyup="updateSizesData()">
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">&nbsp;</label>
                        <button type="button" class="btn btn-danger w-100 remove-size-btn">
                            <i class="fas fa-trash"></i> Remove
                        </button>
                    </div>
                </div>
            `;
            
            container.appendChild(sizeDiv);
            
            // Add event listener to the remove button
            const removeBtn = sizeDiv.querySelector('.remove-size-btn');
            removeBtn.addEventListener('click', function() {
                console.log('Remove size button clicked');
                sizeDiv.remove();
                updateSizesData();
            });
            
            sizeIndex++;
            updateSizesData();
            console.log('Size added successfully, index:', sizeIndex - 1);
        }

        function addNewColor() {
            const container = document.getElementById('colorsContainer');
            if (!container) {
                console.error('colorsContainer not found');
                return;
            }

            const colorDiv = document.createElement('div');
            colorDiv.className = 'color-item border rounded p-3 mb-3 bg-light';
            colorDiv.setAttribute('data-color-index', colorIndex);
            
            colorDiv.innerHTML = `
                <div class="row g-2">
                    <div class="col-md-4">
                        <label class="form-label">Color Name</label>
                        <input type="text" class="form-control color-name-input" 
                               placeholder="e.g., Red, Blue, Black" 
                               onkeyup="updateColorsData()">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Color Code</label>
                        <input type="color" class="form-control form-control-color color-code-input" 
                               value="#000000" onchange="updateColorsData()">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Image (optional)</label>
                        <input type="text" class="form-control color-image-input" 
                               placeholder="image.jpg" onkeyup="updateColorsData()">
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">&nbsp;</label>
                        <button type="button" class="btn btn-danger w-100 remove-color-btn">
                            <i class="fas fa-trash"></i> Remove
                        </button>
                    </div>
                </div>
            `;
            
            container.appendChild(colorDiv);
            
            // Add event listener to the remove button
            const removeBtn = colorDiv.querySelector('.remove-color-btn');
            removeBtn.addEventListener('click', function() {
                console.log('Remove color button clicked');
                colorDiv.remove();
                updateColorsData();
            });
            
            colorIndex++;
            updateColorsData();
            console.log('Color added successfully, index:', colorIndex - 1);
        }



        function updateSizesData() {
            const sizes = [];
            const sizeItems = document.querySelectorAll('.size-item');
            
            sizeItems.forEach(item => {
                const nameInput = item.querySelector('.size-name-input');
                const priceInput = item.querySelector('.size-price-input');
                
                if (nameInput && priceInput && nameInput.value.trim() && priceInput.value) {
                    sizes.push({
                        name: nameInput.value.trim(),
                        price: parseFloat(priceInput.value)
                    });
                }
            });
            
            const hiddenInput = document.getElementById('sizesData');
            if (hiddenInput) {
                hiddenInput.value = JSON.stringify(sizes);
                console.log('Sizes data updated:', sizes);
            }
        }

        function updateColorsData() {
            const colors = [];
            const colorItems = document.querySelectorAll('.color-item');
            
            colorItems.forEach(item => {
                const nameInput = item.querySelector('.color-name-input');
                const codeInput = item.querySelector('.color-code-input');
                const imageInput = item.querySelector('.color-image-input');
                
                if (nameInput && codeInput && nameInput.value.trim() && codeInput.value) {
                    colors.push({
                        name: nameInput.value.trim(),
                        code: codeInput.value,
                        image: imageInput ? imageInput.value.trim() : ''
                    });
                }
            });
            
            const hiddenInput = document.getElementById('colorsData');
            if (hiddenInput) {
                hiddenInput.value = JSON.stringify(colors);
                console.log('Colors data updated:', colors);
            }
        }

        // Color management
        let colorCount = 0;
        function addColor() {
            console.log('addColor() function called');
            const container = document.getElementById('colorsContainer');
            if (!container) {
                console.error('colorsContainer not found');
                return;
            }
            
            const div = document.createElement('div');
            div.className = 'color-section dynamic-input mb-3';
            div.innerHTML = `
                <div class="row">
                    <div class="col-md-4">
                        <input type="text" class="form-control color-name" placeholder="Color name (e.g., Blue, Red)" onchange="updateColors()">
                    </div>
                    <div class="col-md-4">
                        <input type="color" class="form-control color-code" onchange="updateColors()">
                    </div>
                    <div class="col-md-2">
                        <input type="text" class="form-control color-image" placeholder="Image filename" onchange="updateColors()">
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="btn btn-remove" onclick="removeColor(this)">Remove</button>
                    </div>
                </div>
            `;
            container.appendChild(div);
            colorCount++;
            console.log('Color added, total count:', colorCount);
        }

        function removeColor(button) {
            button.closest('.dynamic-input').remove();
            updateColors();
        }

        function updateColors() {
            const colors = [];
            document.querySelectorAll('#colorsContainer .color-section').forEach(section => {
                const name = section.querySelector('.color-name')?.value;
                const code = section.querySelector('.color-code')?.value;
                const image = section.querySelector('.color-image')?.value;
                if (name && code) {
                    colors.push({ name, code, image: image || '' });
                }
            });
            document.getElementById('colorsData').value = JSON.stringify(colors);
        }

        // Form submission handler
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            if (form) {
                form.addEventListener('submit', function(e) {
                    console.log('Form submitting...');
                    
                    // Update sizes and colors data before submission
                    updateSizesData();
                    updateColorsData();
                    
                    // Basic validation
                    const name = document.querySelector('input[name="name"]');
                    const basePrice = document.querySelector('input[name="basePrice"]');
                    
                    if (!name || !name.value.trim()) {
                        e.preventDefault();
                        alert('Product name is required');
                        return false;
                    }
                    
                    if (!basePrice || !basePrice.value || parseFloat(basePrice.value) <= 0) {
                        e.preventDefault();
                        alert('Valid base price is required');
                        return false;
                    }
                    
                    console.log('Form validation passed');
                });
            }
        });
    </script>

<%- include('../include/admin-footer') %>