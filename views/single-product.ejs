<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= product.name %> - MyApp</title>
    <link rel="stylesheet" href="/main.css">
    <style>
        .product-detail-container {
            max-width: 1200px;
            margin: 40px auto;
            padding: 20px;
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 40px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }

        .product-images {
            position: relative;
        }

        .main-image {
            width: 100%;
            height: 400px;
            object-fit: cover;
            border-radius: 8px;
            margin-bottom: 15px;
            border: 2px solid #f0f0f0;
        }

        .image-thumbnails {
            display: flex;
            gap: 10px;
            justify-content: center;
        }

        .thumbnail {
            width: 60px;
            height: 60px;
            border-radius: 6px;
            cursor: pointer;
            border: 2px solid transparent;
            transition: all 0.3s ease;
        }

        .thumbnail:hover,
        .thumbnail.active {
            border-color: #007bff;
            transform: scale(1.05);
        }

        .product-info h1 {
            font-size: 28px;
            color: #333;
            margin-bottom: 10px;
        }

        .price-display {
            font-size: 24px;
            font-weight: bold;
            color: #e74c3c;
            margin-bottom: 20px;
        }

        .product-description {
            color: #666;
            line-height: 1.6;
            margin-bottom: 25px;
        }

        /* Dark mode styles for product description */
        [data-theme="dark"] .product-description {
            color: #f1f5f9 !important;
        }

        [data-theme="dark"] .product-detail-container {
            background: #1e293b !important;
            color: #f1f5f9 !important;
        }

        [data-theme="dark"] .option-label {
            color: #f1f5f9 !important;
        }

        [data-theme="dark"] h1 {
            color: #f1f5f9 !important;
        }

        .option-section {
            margin-bottom: 25px;
        }

        .option-label {
            font-weight: bold;
            color: #333;
            margin-bottom: 10px;
            display: block;
        }

        .size-options, .color-options {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .size-btn {
            padding: 10px 16px;
            border: 2px solid #ddd;
            background: white;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .size-btn:hover,
        .size-btn.selected {
            border-color: #007bff;
            background: #007bff;
            color: white;
        }

        .color-option {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            border: 3px solid transparent;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
        }

        .color-option:hover,
        .color-option.selected {
            border-color: #333;
            transform: scale(1.1);
        }

        .features-list {
            list-style: none;
            padding: 0;
            margin-bottom: 25px;
        }

        .features-list li {
            padding: 5px 0;
            color: #666;
            position: relative;
            padding-left: 20px;
        }

        .features-list li:before {
            content: "✓";
            color: #28a745;
            font-weight: bold;
            position: absolute;
            left: 0;
        }

        .quantity-section {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 25px;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .quantity-controls button {
            width: 36px;
            height: 36px;
            border-radius: 6px;
            border: 1px solid #dee2e6;
            background: #fff;
            color: #495057;
            transition: all 0.2s ease;
        }

        .quantity-controls button:hover {
            background: #007bff;
            color: white;
            border-color: #007bff;
        }

        .quantity-controls button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .quantity-controls input {
            border: 1px solid #dee2e6;
            border-radius: 6px;
            font-weight: 600;
        }

        .add-to-cart-btn {
            background: #28a745;
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            width: 100%;
            transition: background 0.3s ease;
        }

        .add-to-cart-btn:hover {
            background: #218838;
        }

        .add-to-cart-btn:disabled {
            background: #ccc;
            cursor: not-allowed;
        }

        .back-link {
            display: inline-block;
            margin-bottom: 20px;
            color: #007bff;
            text-decoration: none;
            font-weight: 500;
        }

        .back-link:hover {
            text-decoration: underline;
        }

        @media (max-width: 768px) {
            .product-detail-container {
                grid-template-columns: 1fr;
                gap: 20px;
                margin: 20px;
                padding: 15px;
            }
        }
    </style>
</head>
<body>
    <%- include('include/header') %>

    <main class="container">
        <a href="/shop" class="back-link">← Back to Shop</a>
        
        <div class="product-detail-container">
            <div class="product-images">
                <img src="/images/<%= product.image %>" alt="<%= product.name %>" class="main-image" id="mainImage">
                
                <% if (product.images && product.images.length > 1) { %>
                <div class="image-thumbnails">
                    <% product.images.forEach((img, index) => { %>
                    <img src="/images/<%= img %>" alt="<%= product.name %>" 
                         class="thumbnail <%= index === 0 ? 'active' : '' %>" 
                         onclick="changeMainImage('/images/<%= img %>', this)">
                    <% }); %>
                </div>
                <% } %>
            </div>

            <div class="product-info">
                <h1><%= product.name %></h1>
                <div class="price-display" id="priceDisplay">
                    $<%= product.basePrice ? product.basePrice.toFixed(2) : product.price.toFixed(2) %>
                </div>
                
                <div class="delivery-info mb-3" style="padding: 12px; background-color: var(--bg-secondary); border-radius: 8px; border-left: 4px solid var(--primary-color);">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-truck text-primary me-2"></i>
                        <strong class="text-primary">Delivery Time:</strong>
                        <span class="ms-2"><%= product.deliveryTime || 14 %> days</span>
                    </div>
                    <small class="text-muted mt-1 d-block">
                        <i class="fas fa-info-circle me-1"></i>
                        Estimated delivery time from order confirmation
                    </small>
                </div>
                
                <p class="product-description"><%= product.description %></p>

                <form action="/cart/add" method="POST" id="productForm">
                    <input type="hidden" name="productId" value="<%= product._id %>">
                    
                    <% if (product.sizes && product.sizes.length > 0) { %>
                    <div class="option-section">
                        <label class="option-label">Size:</label>
                        <div class="size-options">
                            <% product.sizes.forEach((size, index) => { %>
                            <button type="button" class="size-btn <%= index === 0 ? 'selected' : '' %>" 
                                    data-size="<%= size.name %>" 
                                    data-price="<%= size.price %>">
                                <%= size.name %>
                            </button>
                            <% }); %>
                        </div>
                        <input type="hidden" name="selectedSize" id="selectedSize" value="<%= product.sizes[0].name %>">
                    </div>
                    <% } %>

                    <% if (product.colors && product.colors.length > 0) { %>
                    <div class="option-section">
                        <label class="option-label">Color:</label>
                        <div class="color-options">
                            <% product.colors.forEach((color, index) => { %>
                            <div class="color-option <%= index === 0 ? 'selected' : '' %>" 
                                 style="background-color: <%- color.code %>" 
                                 title="<%= color.name %>"
                                 data-color="<%= color.name %>"
                                 data-image="<%= color.image %>"></div>
                            <% }); %>
                        </div>
                        <input type="hidden" name="selectedColor" id="selectedColor" value="<%= product.colors[0].name %>">
                    </div>
                    <% } %>

                    <% if (product.features && product.features.length > 0) { %>
                    <div class="option-section">
                        <label class="option-label">Features:</label>
                        <ul class="features-list">
                            <% product.features.forEach(feature => { %>
                            <li><%= feature %></li>
                            <% }); %>
                        </ul>
                    </div>
                    <% } %>

                    <!-- Stock Information -->
                    <div class="option-section">
                        <label class="option-label">Availability:</label>
                        <% if (product.stockQuantity > 0) { %>
                            <% if (product.stockQuantity <= 5) { %>
                                <p style="color: #ff6b35; font-weight: bold;">⚠️ Only <%= product.stockQuantity %> left in stock!</p>
                            <% } else if (product.stockQuantity <= 10) { %>
                                <p style="color: #ffa500; font-weight: bold;">🟡 <%= product.stockQuantity %> in stock</p>
                            <% } else { %>
                                <p style="color: #28a745; font-weight: bold;">✅ <%= product.stockQuantity %> in stock</p>
                            <% } %>
                        <% } else { %>
                            <p style="color: #dc3545; font-weight: bold;">❌ Out of Stock</p>
                        <% } %>
                    </div>

                    <% if (product.stockQuantity > 0) { %>
                    <div class="quantity-section">
                        <label for="quantity" class="option-label fw-semibold mb-1">Quantity:</label>
                        <div class="input-group quantity-controls" style="max-width: 180px;">
                            <button type="button" class="btn btn-outline-secondary" id="qtyMinus" aria-label="Decrease quantity" tabindex="0">&#8722;</button>
                            <input 
                                type="number" 
                                class="form-control text-center fw-bold" 
                                id="quantity" 
                                name="quantity" 
                                value="1" 
                                min="1" 
                                max="<%= product.stockQuantity %>" 
                                inputmode="numeric" 
                                aria-live="off"
                                aria-describedby="stockHelp qtyStatus"
                            >
                            <button type="button" class="btn btn-outline-secondary" id="qtyPlus" aria-label="Increase quantity" tabindex="0">+</button>
                        </div>
                        <small id="stockHelp" class="text-muted d-block mt-1">Max: <%= product.stockQuantity %></small>
                        <div id="qtyStatus" class="visually-hidden" aria-live="polite"></div>
                    </div>

                    <button type="submit" class="add-to-cart-btn">Add to Cart</button>
                    
                    <% } else { %>
                    <button type="button" class="add-to-cart-btn" disabled style="background: #ccc; cursor: not-allowed;">Out of Stock</button>
                    <% } %>
                </form>
            </div>
        </div>
    </main>

    <script>
        let currentPrice = <%- JSON.stringify(product.basePrice || product.price) %>;

        function changeMainImage(src, thumbnail) {
            document.getElementById('mainImage').src = src;
            

            document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
            thumbnail.classList.add('active');
        }

        function selectSize(sizeName, price) {
            document.querySelectorAll('.size-btn').forEach(btn => btn.classList.remove('selected'));
            event.target.classList.add('selected');
            
            document.getElementById('selectedSize').value = sizeName;
            
            currentPrice = price;
            document.getElementById('priceDisplay').textContent = '$' + price.toFixed(2);
        }

        function selectColor(colorName, imageSrc) {
            document.querySelectorAll('.color-option').forEach(opt => opt.classList.remove('selected'));
            event.target.classList.add('selected');
            
            document.getElementById('selectedColor').value = colorName;
            
            if (imageSrc && imageSrc !== '<%= product.image %>') {
                document.getElementById('mainImage').src = '/images/' + imageSrc;
            }
        }

        // New quantity control logic for visible input-group
        (function(){
            const qtyInput = document.getElementById('quantity');
            const btnMinus = document.getElementById('qtyMinus');
            const btnPlus = document.getElementById('qtyPlus');
            const statusRegion = document.getElementById('qtyStatus');
            if(!qtyInput || !btnMinus || !btnPlus) return;

            const min = parseInt(qtyInput.min) || 1;
            const max = parseInt(qtyInput.max) || 1;
            let holdTimer = null;
            let holdInterval = null;

            function clamp(val){
                if(isNaN(val)) return min;
                return Math.min(max, Math.max(min, val));
            }

            function updateButtons(){
                const value = parseInt(qtyInput.value) || min;
                btnMinus.disabled = value <= min;
                btnPlus.disabled  = value >= max;
                btnMinus.classList.toggle('disabled', btnMinus.disabled);
                btnPlus.classList.toggle('disabled', btnPlus.disabled);
            }

            function change(delta){
                const current = parseInt(qtyInput.value) || min;
                const next = clamp(current + delta);
                if(next !== current){
                    qtyInput.value = next;
                    qtyInput.dispatchEvent(new Event('change', { bubbles: true }));
                    if(statusRegion){
                        statusRegion.textContent = `Quantity ${next} of maximum ${max}`;
                    }
                }
                updateButtons();
            }

            function startHold(delta){
                change(delta);
                holdTimer = setTimeout(()=>{
                    holdInterval = setInterval(()=>change(delta), 70); // acceleration feel
                }, 400); // long-press delay
            }

            function clearHold(){
                clearTimeout(holdTimer); holdTimer=null;
                clearInterval(holdInterval); holdInterval=null;
            }

            // Click / hold events
            ['mousedown','touchstart'].forEach(ev=>{
                btnMinus.addEventListener(ev, ()=> startHold(-1));
                btnPlus.addEventListener(ev, ()=> startHold(1));
            });
            ['mouseup','mouseleave','touchend','touchcancel'].forEach(ev=>{
                btnMinus.addEventListener(ev, clearHold);
                btnPlus.addEventListener(ev, clearHold);
            });

            // Keyboard support when focused on buttons
            [btnMinus, btnPlus].forEach(btn=>{
                btn.addEventListener('keydown', e=>{
                    if(e.key === 'Enter' || e.key === ' '){
                        e.preventDefault();
                        change(btn === btnMinus ? -1 : 1);
                    }
                });
            });

            // Direct typing sanitization
            qtyInput.addEventListener('input', ()=>{
                const cleaned = qtyInput.value.replace(/[^0-9]/g,'');
                qtyInput.value = cleaned === '' ? '' : cleaned;
            });
            qtyInput.addEventListener('blur', ()=>{
                qtyInput.value = clamp(parseInt(qtyInput.value));
                updateButtons();
                if(statusRegion){
                    statusRegion.textContent = `Quantity ${qtyInput.value} of maximum ${max}`;
                }
            });
            qtyInput.addEventListener('change', updateButtons);

            // Prevent scroll wheel from accidentally changing when not intended
            qtyInput.addEventListener('wheel', e=>{ e.preventDefault(); }, { passive:false });

            updateButtons();
        })();
        
        // Initialize button states when page loads
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded, initializing quantity controls...');
            
            // Quantity control now initialized immediately in IIFE above.
            
            // Add event listeners for size buttons
            document.querySelectorAll('.size-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const sizeName = this.getAttribute('data-size');
                    const price = parseFloat(this.getAttribute('data-price'));
                    selectSize(sizeName, price);
                });
            });
            
            // Add event listeners for color options
            document.querySelectorAll('.color-option').forEach(option => {
                option.addEventListener('click', function() {
                    const colorName = this.getAttribute('data-color');
                    const imageSrc = this.getAttribute('data-image');
                    selectColor(colorName, imageSrc);
                });
            });
            
            // Ensure form validation on submit
            const form = document.querySelector('form[action="/cart/add"]');
            if (form) {
                form.addEventListener('submit', function(e) {
                    const quantityInput = document.getElementById('quantity');
                    const quantity = parseInt(quantityInput.value) || 1;
                    
                    if (quantity < 1) {
                        e.preventDefault();
                        alert('Please select a valid quantity');
                        return false;
                    }
                    
                    console.log('Submitting form with quantity:', quantity);
                });
            }
            
            console.log('Quantity controls initialized successfully');
        });
    </script>

    <%- include('include/footer') %>
</body>
</html>